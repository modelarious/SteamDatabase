from Server.WebsocketClientHandlerRegistry import WebsocketClientHandlerRegistry
from Server.Server import Server

from State.StateCommunicatorFactory import StateCommunicatorFactory
from State.ObserverSocketHookupFactory import ObserverSocketHookupFactory

from State.StateCommunicatorInterface import StateCommunicatorInterface

from multiprocessing import Manager

from SteamDatabase import match_steam_games_to_games_on_disk_and_store
from ExternalDataFetchers.SteamGameListFetcherMOCKDATA import SteamGameListFetcherMOCKDATA
from InternalDataFetchers.DirListFetcherMOCKDATA import DirListFetcherMOCKDATA

from State.StateCommunicatorQueues import StateCommunicationQueueWriter, StateCommunicationQueueReader

testStr = """
History Clear
URL
ws://localhost:3091/upcoming
 Open
Status: CLOSED
Request
Send [Ctrl + Enter]
Message Log Clear
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'"]
["hello world", "class", "concurrent.futures.Executor", "An", "that", "abstract", "provides", "methods", "to", "execute", "asynchronously.", "calls", "It", "not", "should", "be", "directly,", "used", "but", "through", "its", "subclasses.", "concrete", "submit(fn,", "/,", "*args,", "**kwargs)", "Schedules", "the", "callable,", "fn,", "executed", "fn(*args", "as", "and", "a", "returns", "object", "representing", "Future", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "executor:", "future", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "lazily;", "than", "func", "is", "asynchronously", "several", "may", "made", "The", "concurrently.", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "if", "__next__()", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "this", "method", "chops", "into", "number", "chunks", "which", "it", "submits", "pool", "separate", "tasks.", "(approximate)", "size", "these", "setting", "by", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "cancelled,", "regardless", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'src3.txt',", "'dest3.txt')", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "2)", "5,", "This", "only", "one", "worker", "thread", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "thread_name_prefix", "argument", "was", "added", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "os.cpu_count()", "+", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'", "len(data)))"]
["hello world"]
["hello world", "class"]
["hello world", "class", "concurrent.futures.Executor"]
["hello world", "class", "concurrent.futures.Executor", "An"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "="]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map()."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map()."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4)."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4)."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4)."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4)."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too."]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'"]
["hello world", "class", "concurrent.futures.Executor", "An", "abstract", "that", "provides", "methods", "to", "It", "asynchronously.", "calls", "execute", "should", "be", "not", "used", "directly,", "but", "its", "through", "concrete", "subclasses.", "submit(fn,", "/,", "Schedules", "*args,", "**kwargs)", "callable,", "the", "fn,", "executed", "as", "fn(*args", "and", "returns", "a", "Future", "object", "representing", "execution", "of", "callable.", "with", "ThreadPoolExecutor(max_workers=1)", "future", "executor:", "=", "executor.submit(pow,", "323,", "1235)", "print(future.result())", "map(func,", "*iterables,", "timeout=None,", "chunksize=1)", "Similar", "*iterables)", "except:", "iterables", "are", "collected", "immediately", "rather", "than", "lazily;", "func", "is", "asynchronously", "several", "may", "made", "concurrently.", "The", "returned", "iterator", "raises", "concurrent.futures.TimeoutError", "__next__()", "if", "called", "result", "isn\u2019t", "available", "after", "timeout", "seconds", "from", "original", "call", "Executor.map().", "can", "an", "int", "or", "float.", "If", "specified", "None,", "there", "no", "limit", "wait", "time.", "exception,", "then", "exception", "will", "raised", "when", "value", "retrieved", "iterator.", "When", "using", "ProcessPoolExecutor,", "method", "this", "chops", "into", "number", "which", "chunks", "it", "submits", "pool", "separate", "tasks.", "size", "(approximate)", "these", "by", "setting", "chunksize", "positive", "integer.", "For", "very", "long", "iterables,", "large", "for", "significantly", "improve", "performance", "compared", "default", "1.", "With", "ThreadPoolExecutor,", "has", "effect.", "Changed", "in", "version", "3.5:", "Added", "argument.", "shutdown(wait=True,", "*,", "cancel_futures=False)", "Signal", "executor", "free", "any", "resources", "currently", "pending", "futures", "done", "executing.", "Calls", "Executor.submit()", "Executor.map()", "shutdown", "raise", "RuntimeError.", "True", "return", "until", "all", "executing", "associated", "have", "been", "freed.", "False", "freed", "Regardless", "wait,", "entire", "Python", "program", "exit", "cancel_futures", "True,", "cancel", "started", "running.", "Any", "completed", "running", "won\u2019t", "regardless", "cancelled,", "cancel_futures.", "both", "prior", "returning.", "remaining", "cancelled.", "You", "avoid", "having", "explicitly", "you", "use", "statement,", "Executor", "(waiting", "Executor.shutdown()", "were", "set", "True):", "import", "shutil", "ThreadPoolExecutor(max_workers=4)", "e:", "e.submit(shutil.copy,", "'src1.txt',", "'dest1.txt')", "'src2.txt',", "'dest2.txt')", "'dest3.txt')", "'src3.txt',", "'src4.txt',", "'dest4.txt')", "3.9:", "ThreadPoolExecutor", "subclass", "uses", "threads", "Deadlocks", "occur", "callable", "waits", "on", "results", "another", "Future.", "example:", "time", "def", "wait_on_b():", "time.sleep(5)", "print(b.result())", "#", "b", "never", "complete", "because", "waiting", "a.", "5", "wait_on_a():", "print(a.result())", "b.", "6", "ThreadPoolExecutor(max_workers=2)", "executor.submit(wait_on_b)", "executor.submit(wait_on_a)", "And:", "wait_on_future():", "f", "5,", "2)", "This", "only", "one", "thread", "worker", "function.", "print(f.result())", "executor.submit(wait_on_future)", "concurrent.futures.ThreadPoolExecutor(max_workers=None,", "thread_name_prefix='',", "initializer=None,", "initargs=())", "at", "most", "max_workers", "initializer", "optional", "start", "each", "thread;", "initargs", "tuple", "arguments", "passed", "initializer.", "Should", "jobs", "BrokenThreadPool,", "well", "attempt", "submit", "more", "pool.", "None", "given,", "processors", "machine,", "multiplied", "assuming", "often", "overlap", "I/O", "instead", "CPU", "work", "workers", "higher", "ProcessPoolExecutor.", "New", "3.6:", "argument", "thread_name_prefix", "added", "was", "allow", "users", "control", "threading.Thread", "names", "created", "easier", "debugging.", "3.7:", "arguments.", "3.8:", "Default", "changed", "min(32,", "+", "os.cpu_count()", "4).", "preserves", "least", "bound", "utilizes", "32", "cores", "tasks", "release", "GIL.", "And", "avoids", "implicitly", "many-core", "machines.", "now", "reuses", "idle", "before", "starting", "too.", "Example", "concurrent.futures", "urllib.request", "URLS", "['http://www.foxnews.com/',", "'http://www.cnn.com/',", "'http://europe.wsj.com/',", "'http://www.bbc.co.uk/',", "'http://some-made-up-domain.com/']", "Retrieve", "single", "page", "report", "URL", "contents", "load_url(url,", "timeout):", "urllib.request.urlopen(url,", "timeout=timeout)", "conn:", "conn.read()", "We", "statement", "ensure", "cleaned", "up", "promptly", "concurrent.futures.ThreadPoolExecutor(max_workers=5)", "Start", "load", "operations", "mark", "future_to_url", "{executor.submit(load_url,", "url,", "60):", "url", "URLS}", "concurrent.futures.as_completed(future_to_url):", "future_to_url[future]", "try:", "data", "future.result()", "except", "Exception", "exc:", "print('%r", "generated", "exception:", "%s'", "%", "(url,", "exc))", "else:", "%d", "bytes'", "len(data)))"]
[]
["hello world"]
"""

class StateCommunicatorQueueContainerFactory:
    def __init__(self, managerInstance: Manager):
        self.manager = managerInstance
        self.queues = {}
    
    def create(self):
        self.queues = {}
        stateCommunicatorPublicMethods = [methodName for methodName in dir(StateCommunicatorInterface) if not methodName.startswith('_')]
        for methodName in stateCommunicatorPublicMethods:
            # XXX need to be joined or terminated in some way
            self.queues[methodName] = self.manager.Queue()
        return self.queues

def hit_dat_upcoming_state(writer, textToWrite):
    writer.setUpcomingState(textToWrite)

if __name__ == '__main__':
    m = Manager()
    # XXX this is going to have to change, because you'll 
    # need one for each function in the StateCommunicationInterface
    # which will get out of hand!
    # consider a "StateCommunicatorQueueContainerFactory" which takes an instance of the manager and creates a
    # queue for each function of a StateCommunicatorInterface, storing them in a StateCommunicatorQueueContainer that can be passed around
    stateQueueFactory = StateCommunicatorQueueContainerFactory(m)
    queues = stateQueueFactory.create()
    writer = StateCommunicationQueueWriter(queues)

    websocketRegistry = WebsocketClientHandlerRegistry()
    server = Server(websocketRegistry)
    server.startInThread()

    print("waiting on sockets")
    websocketRegistry.waitForAllSocketsReady()
    print("all needed sockets have been connected")

    # now that we are guaranteed that the sockets are connected, we can use them
    observerSocketHookupFactory = ObserverSocketHookupFactory(websocketRegistry)
    stateCommunicatorFactory = StateCommunicatorFactory()
    stateCommunicator = stateCommunicatorFactory.createStateCommunicator(observerSocketHookupFactory)
    
    # XXX this is shared with the cli - use abstract factory pattern to make mock data
    # steamGameListFetcher = SteamGameListFetcherMOCKDATA()
    # steamGamesList = steamGameListFetcher.fetch_games_list()

    # dirListFetcher = DirListFetcherMOCKDATA()
    # gamesOnDisk = dirListFetcher.get_dirs("")
    

    reader = StateCommunicationQueueReader(stateCommunicator, queues)
    reader.start()
    writer.setUpcomingState("hello world")
    
    from concurrent.futures import ProcessPoolExecutor
    futures = []
    with ProcessPoolExecutor(max_workers=6) as executor:
        for textToWrite in testStr.split():
            future = executor.submit(hit_dat_upcoming_state, writer, textToWrite)
            futures.append(future)
    
    for future in futures:
        print(future.result())

    from time import sleep

    sleep(12)


    # XXX Are there duplicate steam titles in the list? The fast map might need to be changed!
    # match_steam_games_to_games_on_disk_and_store(steamGamesList, gamesOnDisk, stateCommunicator)

    # XXX if you want the reader to join properly, you're going to have to tell the queues to shutdown
    reader.join()

    server.join()
    m.join()




